// Contains a function ArrMax.arrMax that finds and returns the largest element in the array a of length b.
// a & b are both supplied as arguments

// Put your code here.


function ArrMax.arrMax 2

push argument 0   // 当前数据地址
pop pointer 0

push constant 0 //目前 max 数值
pop local 0

push constant 0 //array 长度
pop local 1

label LOOP_START   //开始循环
push local 1            
push argument 1   //如果 array 长度小于 0 结束
gt
if-goto END_LOOP

push pointer 0   // 把地址压入 stack 
push local 1   // array 长度
add
pop pointer 1
push that 0   //加载 数据地址的数值
pop local 0  //对比 max 数值
gt
if-goto UPDATE_MAX

local 1   //array 长度
push constant 1
add     // 
pop local 1

goto LOOP_START

label UPDATE_MAX
push that 0
pop local 0

local 1
push constant 1
add
pop local 1

goto LOOP_START

label END_LOOP
push local 0
return
